


import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/*
Using under the license of:
CC0 “No Rights Reserved”
https://creativecommons.org/share-your-work/public-domain/cc0/
and 
WTFPL – Do What the Fuck You Want to Public License
http://www.wtfpl.net/
*/


/**
 *
 * @author Cuong Nhat Phan
 * Extra Credit Amazon web scrapper project
 * Submission date: 11/30/2021
 */

public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtInput = new javax.swing.JTextField();
        btnGo = new javax.swing.JButton();
        lblURL = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        pnlResult1 = new javax.swing.JTextPane();
        btnClear = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        lblPageText = new javax.swing.JLabel();
        lblPageNum = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnGo.setText("GO");
        btnGo.setToolTipText("");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(pnlResult1);

        btnClear.setText("CLEAR");
        btnClear.setToolTipText("");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnNext.setText("NEXT PAGE");
        btnNext.setToolTipText("");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setText("PREVIOUS PAGE");
        btnPrevious.setToolTipText("");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        lblPageText.setText(" ");

        lblPageNum.setText("    ");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ebay Web Scrapper Using Jsoup - Experimental ver. - Cuong Phan");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(93, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPageText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPageNum))
                            .addComponent(lblURL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnPrevious)
                        .addGap(65, 65, 65)
                        .addComponent(btnClear)
                        .addGap(77, 77, 77)
                        .addComponent(btnNext)
                        .addGap(238, 238, 238))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtInput, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(btnGo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblURL, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPageText)
                            .addComponent(lblPageNum))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPrevious)
                            .addComponent(btnClear)
                            .addComponent(btnNext))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Method to get the URL link from the input text box, basically it will get what it read from the textbox, split the keywords by blank spaces, then join them with +, and add everything into the https://www.ebay.com/sch/i.html?_nkw= string
    public String GetURL(String input){
        String[] splitStr;
        splitStr = input.split(" ");
        //return "https://www.amazon.com/s?k=" + String.join("+",splitStr);
        return "https://www.ebay.com/sch/i.html?_nkw=" + String.join("+",splitStr);      
    }
    
    //The method to perform the web scraping from the link as the argument
    public void performScraping(String urlOutput){
        try {            
            
            lblURL.setText(urlOutput);
            ArrayList<String> titleArrayList = new ArrayList<>();
            ArrayList<String> linkArrayList = new ArrayList<>();
            ArrayList<String> ratingCountArrayList = new ArrayList<>();
            ArrayList<String> rateArrayList = new ArrayList<>();
            
            Document doc = Jsoup.connect(urlOutput).get();
                
            //for getting the titleArrayList and the linkArrayList for this particular item
            Elements reviewElement = doc.select("#srp-river-results > ul > li > div > div.s-item__info > a ");            
            for (Element perItem : reviewElement) {
              
              //get the text of the HTML class "s-item__title" and store into the titleArrayList arraylist
                String name = perItem.getElementsByClass("s-item__title").text();
                titleArrayList.add(name);
                String linkURL = perItem.attr("abs:href");                   
                //reduce the linkArrayList to eliminate all other references
                String reducedLink = linkURL.substring(0, linkURL.indexOf("?"));
                //add the linkArrayList into the linkArrayList arraylist
                linkArrayList.add(reducedLink);       
            }
            //for getting the number of rates for this particular item
            Elements reviewElement2 = doc.select("#srp-river-results > ul > li > div > div.s-item__info > div.s-item__reviews > a > div > span");
            for (Element perItem : reviewElement2) {
                //get the number of rating which store inside of the HTML class "clipped" and store into the ratingCountArrayList arraylist
                String rating = perItem.getElementsByClass("clipped").text();
                ratingCountArrayList.add(rating);
            }
            
            //for getting the rating for this particular item
            Elements reviewElement3 = doc.select("#srp-river-results > ul > li > div > div.s-item__info > div.s-item__reviews > a > span > span");            
            for (Element perItem : reviewElement3) {
                //search for the text which has the text "product rating" inside of the span tag and store into the rateArrayList arraylist
                String ratingNum = perItem.getElementsContainingText​("product rating").text();
                rateArrayList.add(ratingNum);          
            }
            
            //Print out the information from all 4 arraylist above, the size of those arraylist should be the same so I took the size of the titleArrayList
            for (int i = 0; i < titleArrayList.size(); i++){
                pnlResult1.setText(pnlResult1.getText() + titleArrayList.get(i) + "\n" + linkArrayList.get(i) + "\n" + ratingCountArrayList.get(i) + "\n" + rateArrayList.get(i) + "\n" + "------------------------------------------------------------------------------------------------------------------------------------------------------" + "\n\n");
            }
                
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        lblPageText.setText("Current Search Page:");
        lblPageNum.setText("1");
        String urlOutput = GetURL(txtInput.getText());
        performScraping(urlOutput);    
        
    }//GEN-LAST:event_btnGoActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        lblPageText.setText("");
        pnlResult1.setText("");
        txtInput.setText("");
        lblPageNum.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        int currentPage = Integer.parseInt(lblPageNum.getText());
        currentPage++;
        String urlOutput = GetURL(txtInput.getText()) + "_pgn=" + currentPage;
        lblPageText.setText("Current Search Page:");
        lblPageNum.setText(String.valueOf(currentPage) );
        pnlResult1.setText("");
        performScraping(urlOutput);        
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        int currentPage = Integer.parseInt(lblPageNum.getText());
        if (currentPage > 1) {
            currentPage--;
            String urlOutput = GetURL(txtInput.getText()) + "_pgn=" + currentPage;
            lblPageText.setText("Current Search Page:");
            lblPageNum.setText(String.valueOf(currentPage) );
            pnlResult1.setText("");
            performScraping(urlOutput);
        }         
    }//GEN-LAST:event_btnPreviousActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnGo;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblPageNum;
    private javax.swing.JLabel lblPageText;
    private javax.swing.JLabel lblURL;
    private javax.swing.JTextPane pnlResult1;
    private javax.swing.JTextField txtInput;
    // End of variables declaration//GEN-END:variables
}
